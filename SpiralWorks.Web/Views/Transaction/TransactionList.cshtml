@model IEnumerable<TransactionItemViewModel>
@using SpiralWorks.Interfaces;
@using SpiralWorks.Web.Helpers;
@inject IUnitOfWork uow;
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">
                TransactionId
            </th>
            <th scope="col">
                Account Number
            </th>
            <th scope="col">
                Transaction Type
            </th>
            <th scope="col">
                Debit
            </th>
            <th scope="col">
                Credit
            </th>
            <th scope="col">
                Balance
            </th>
            <th scope="col">
                RowVersion
            </th>
            <th scope="col">
                Date Created
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var description = (item.TransactionType.Equals("DEP")) ? "(Deposit)" : (item.TransactionType.Equals("WIT")) ? "(Withdrawal)" : $"(Transfer to {item.AccountId.GetAccountNumber(uow)})";
            <tr>
                <th scope="row">
                    @item.TransactionId
                </th>
                <td>
                    @item.AccountId.GetAccountNumber(uow)
                </td>
                <td>
                    @item.TransactionType  @description
                </td>
                <td>
                    @item.Debit.EmptyOrDefault()
                </td>
                <td>
                    @item.Credit.EmptyOrDefault()
                </td>
                <td>
                    @item.Balance
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RowVersion)
                </td>
                <td>
                    @item.DateCreated
                </td>
            </tr>
        }
    </tbody>
</table>
